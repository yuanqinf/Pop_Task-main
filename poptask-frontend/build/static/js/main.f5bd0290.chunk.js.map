{"version":3,"sources":["assets/TaskLogoTemp.png","context/GlobalContext.js","components/Login.js","components/csrftoken.js","components/Register.js","util.js","components/EventViewComponents/CalendarHeader.js","components/EventViewComponents/Day.js","components/EventViewComponents/Month.js","components/EventViewComponents/SmallCalendar.js","components/EventViewComponents/EventModal.js","components/EventViewComponents/EventView.js","components/MainHeader.js","components/AccountManagement.js","components/Sidebar.js","components/MainSideNav.js","assets/plus.svg","components/EventPoolComponents/CreateEventButton.js","components/EventPoolComponents/PoolHeader.js","components/EventPoolComponents/EventCard.js","components/EventPoolComponents/PoolContent.js","components/EventPoolComponents/EventPool.js","components/LeaderboardComponents/LeaderboardHeader.js","components/LeaderboardComponents/LeaderBoardIndividual.js","components/LeaderboardComponents/LeaderboardView.js","components/HomePage.js","App.js","context/ContextWrapper.js","index.js"],"names":["GlobalContext","React","createContext","monthIndex","setMonthIndex","index","smallCalendarMonth","setSmallCalendarMonth","daySelected","setDaySelected","day","showEventModal","setShowEventModal","dispatchCalEvent","type","payload","savedEvents","selectedEvent","setSelectedEvent","setLabels","labels","updateLabel","filteredEvents","segmentSelected","setSegmentSelected","currentGroup","setCurrentGroup","currentUser","setCurrentUser","allGroupsInfo","setAllGroupsInfo","allUsers","setAllUsers","groupsRankInfo","setGroupsRankInfo","Login","navigator","useNavigate","useState","username","setUsername","password","setPassword","axios","require","getEmail","get","then","data","loginUser","details","console","log","post","localStorage","setItem","catch","error","e","a","preventDefault","loginInfo","email","googleResponse","response","accesstoken","code","googleLogin","res","status","className","id","src","logo","alt","href","onSubmit","htmlFor","required","onChange","target","value","name","clientId","buttonText","onSuccess","isSignedIn","onFailure","csrftoken","cookieValue","document","cookie","cookies","split","i","length","jQuery","trim","substring","decodeURIComponent","getCookie","CSRFToken","Register","storeToken","password1","setPassword1","password2","setPassword2","setEmail","registerUser","registerDetails","registerInfo","getMonth","month","dayjs","Math","floor","year","firstDayOfTheMonth","Date","currentMonthCount","daysMatrix","Array","fill","map","CalendarHeader","useContext","handleReset","random","useEffect","onClick","format","Day","rowIdx","dayEvents","setDayEvents","token","getItem","getTasks","headers","tasks","filteredTasks","sort","b","deadline","filter","evt","assigned_to","group","done_at","handleBurndownBar","Number","diff","dayDiff","fetchTaskInfo","toUpperCase","task","idx","Month","row","Fragment","SmallCalendar","currentMonthIdx","setCurrentMonthIdx","currentMonth","setCurrentMonth","getDayClass","nowDay","currDay","slcDay","charAt","EventModal","setName","description","setDescription","score","setScore","miniCalendarOpen","setMiniCalendarOpen","delete","handleDelete","placeholder","readOnly","autoComplete","calendarTask","put","handleSubmit","updatedTask","newHandleDoneTask","EventView","currenMonth","MainHeader","Navbar","fixed","Nav","Brand","classNames","classes","Boolean","join","AccountManagement","curretnUserName","setCurretnUserName","getUser","user","fetchUserInfo","as","Button","width","height","viewBox","xmlns","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","enter","enterFrom","enterTo","leave","leaveFrom","leaveTo","Items","Item","active","clear","Sidebar","teamsInfo","setTeamsInfo","selectedTeam","setSelectedTeam","searchUserEmail","setSearchUserEmail","groupNameEntry","setGroupNameEntry","isFirstTime","setIsFirstTime","delay","currentUserEmail","getGroup","fetchGroupInfo","curUser","getUsers","users","groups","filteredGroups","groupVal","mygroups","includes","setSelectedTeamArray","teamIndex","teamVal","undefined","teamArray","removeUserItself","groupName","encodeURI","getAllTasks","deleteTask","allTasks","callback","savedCallback","useRef","current","setInterval","clearInterval","useInterval","members","memberVal","manager","memberName","memberList","filteredList","member","removeGroupMember","event","userValue","newMember","updatedList","inviteGroupMember","deleteGroupClicked","createNewGroup","MainSideNav","CreateEventButton","plusImg","PoolHeader","EventCard","label","handlePop","PoolContent","currentUsercurrentGroupUnpoppedEvents","setCurrentUsercurrentGroupUnpoppedEvents","EventPool","LeaderboardHeader","LeaderBoardIndividual","userInfo","rank","managerEmail","uEmail","LeaderboardView","rankUsers","setRankUsers","setManagerEmail","forEach","element","getAllRankUsersInfo","getUserRankInfoFromGroup","currentGroupInfo","currentUserList","j","push","getCurrentGroupInfo","scope","u1","u2","HomePage","Token","App","path","exact","requestOptions","method","body","JSON","stringify","fetch","toString","savedEventsReducer","state","postEvent","getEvent","updateEvent","deleteEvent","Error","initEvents","storageEvents","parse","ContextWrapper","props","useReducer","useMemo","lbl","checked","prevLabels","Set","currentLabel","find","Provider","children","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f5bd0290.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/TaskLogoTemp.51888051.png\";","import React from \"react\";\n\nconst GlobalContext = React.createContext({\n  monthIndex: 0,\n  setMonthIndex: (index) => {},\n  smallCalendarMonth: 0,\n  setSmallCalendarMonth: (index) => {},\n  daySelected: null,\n  setDaySelected: (day) => {},\n  showEventModal: false,\n  setShowEventModal: () => {},\n  dispatchCalEvent: ({ type, payload }) => {},\n  savedEvents: [],\n  selectedEvent: null,\n  setSelectedEvent: () => {},\n  setLabels: () => {},\n  labels: [],\n  updateLabel: () => {},\n  filteredEvents: [],\n  segmentSelected: null,\n  setSegmentSelected: () => {},\n  currentGroup: null,\n  setCurrentGroup: () => {},\n  currentUser: null,\n  setCurrentUser: () => {},\n  allGroupsInfo: [], \n  setAllGroupsInfo: () => {},\n  allUsers: [], \n  setAllUsers: () => {},\n\n  groupsRankInfo: [],\n  setGroupsRankInfo: () => {},\n});\n\nexport default GlobalContext;\n","/* login.jsx */\nimport React , { useState, useContext } from \"react\";\nimport logo from \"../assets/TaskLogoTemp.png\";\nimport \"../login.css\"\nimport { useNavigate } from \"react-router-dom\";\nimport GlobalContext from \"../context/GlobalContext\";\nimport GoogleLogin from 'react-google-login';\n\n\n\nexport default function Login() {\n  const navigator = useNavigate();\n  const [username, setUsername] = useState();\n  const [password, setPassword] = useState();\n  const axios = require('axios');\n  const googleClientId = \"810586372650-b4nsj2jid6rnln124vkq8k526kijl0e7.apps.googleusercontent.com\"\n\n  function getEmail() {\n     return axios.get(`/users?username=${username}`)\n      .then(function ({data}) {\n          // handle success\n          return (data[0]['email']);\n    })\n  }\n\n  function loginUser(details) {\n    console.log(\"currently logging\");\n    console.log(details);\n    const axios = require('axios');\n    return axios.post('/rest-auth/login/', details\n        ).then(function (data) {\n          console.log(\"this is key: \");\n          console.log(data[\"data\"][\"key\"]);\n          localStorage.setItem('Token', data[\"data\"][\"key\"])\n        })\n        .catch(function (error) {\n            console.log(error);\n        });\n  }\n\n\n\n  async function handleSubmit(e){\n    e.preventDefault();\n    const loginInfo = {\n      \"username\": username,\n      \"password\": password\n    }\n    try {\n      await loginUser(loginInfo);\n      await getEmail().then((email) => {\n        localStorage.setItem('UserEmail', email)\n        console.log(\"this is email\");\n        console.log(email);\n      });\n      navigator('/homepage');\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  \n\n  const googleResponse = (response) => {\n    console.log(response);\n    const accesstoken = response.accesstoken;\n    const code = response.code;\n    const googleLogin = async (accesstoken, code) => {\n      let res = await axios.post(\n        \"http://localhost:8000/rest-auth/google/\",\n        {\n          \"access_token\": accesstoken,\n          \"code\": code\n        }\n      );\n      console.log(res);\n      return await res.status;\n    };\n    return googleLogin;\n  }\n\n  return ( \n    <div className=\"h-screen bg-gradient-to-r from-blue-400 via-purple-500 to-pink-500 pt-3 pl-3 pb-3\" id=\"body\">\n      <div className=\"text-center mt-12\">\n        <div className=\"flex items-center justify-center\">\n          <img src={logo} alt=\"calendar\" className=\"mb-1 mr-2 ml-1 w-20 h-20 inline-block mt-2 mb-8\" />\n        </div>            \n\n        <h2 className=\"text-4xl tracking-tight\">\n          Sign in into your account\n        </h2>\n        <span className=\"text-sm\"> or <a href=\"/register\" className=\"text-blue-200 hover:text-blue-300\"> \n          register a new account\n        </a>\n        </span>\n      </div>\n      <div className=\"flex justify-center my-8 mx-4 md:mx-0\">\n        <form onSubmit = {handleSubmit} className=\"w-full max-w-xl bg-white rounded-lg shadow-md p-6\">\n            <div className=\"flex flex-wrap -mx-3 mb-6\">\n              <div className=\"w-full md:w-full px-3 mb-6\">\n                  <label className=\"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2\" htmlFor='Password'>Username</label>\n                  <input className=\"appearance-none block w-full bg-white text-gray-900 font-medium border border-gray-400 rounded-lg py-3 px-3 leading-tight focus:outline-none\"  required \n                    onChange={e => setUsername(e.target.value)}\n                  />\n              </div>\n              <div className=\"w-full md:w-full px-3 mb-6\">\n                  <label className=\"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2\" htmlFor='Password'>Password</label>\n                  <input className=\"appearance-none block w-full bg-white text-gray-900 font-medium border border-gray-400 rounded-lg py-3 px-3 leading-tight focus:outline-none\" type='password' required \n                    onChange={e => setPassword(e.target.value)}\n                  />\n              </div>\n              <div className=\"w-full flex items-center justify-between px-3 mb-3 \">\n                  <label htmlFor=\"remember\" className=\"flex items-center w-1/2\">\n                    <input type=\"checkbox\" name=\"\" id=\"\" className=\"mr-1 bg-white shadow\" />\n                    <span className=\"text-sm text-gray-700 pt-1\">Remember Me</span>\n                  </label>\n                  <div className=\"w-1/2 text-right\">\n                    <a href=\"#\" className=\"text-blue-500 text-sm tracking-tight\">Forget your password?</a>\n                  </div>\n              </div>\n              <div className=\"w-full md:w-full px-3 mb-6\">\n                  <button className=\"appearance-none block w-full bg-blue-600 text-gray-100 font-bold border border-gray-200 rounded-lg py-3 px-3 leading-tight hover:bg-blue-500 focus:outline-none\"\n                    type=\"submit\"\n                  >\n                    Sign in  \n                  </button>\n              </div>\n              <div className=\"mx-auto -mb-6 pb-1\">\n                  <span className=\"text-center text-xs text-gray-700\">or sign up with</span>\n              </div>\n              <div className=\"flex items-center w-full mt-4\">\n                  <div className=\"w-full md:w-1/3 px-3 pt-4 mx-2 border-t border-gray-400\">\n\n                  </div>\n                  <div className=\"w-full md:w-32 px-8 pt-4 mx-2\">\n                    {/* <button className=\"appearance-none flex items-center justify-center block w-full bg-gray-100 text-gray-700 shadow border border-gray-500 rounded-lg py-3 px-3 leading-tight hover:bg-gray-200 hover:text-gray-700 focus:outline-none\"\n                      onClick={googleLogin}>\n                      <img src=\"https://www.freepnglogos.com/uploads/google-logo-png/google-logo-png-webinar-optimizing-for-success-google-business-webinar-13.png\"\n                        alt=\"calendar\" className=\"w-8 h-8 inline-block\" \n                      />\n                    </button> */}\n                    \n                    <GoogleLogin\n                      clientId={googleClientId}\n                      buttonText=\"Google\"\n                      onSuccess={googleResponse}\n                      isSignedIn={true}\n                      onFailure={googleResponse}\n                    />\n                  </div>\n                  <div className=\"w-full md:w-1/3 px-3 pt-4 mx-2 border-t border-gray-400\">\n\n                  </div>\n              </div>\n            </div>\n        </form>\n      </div>\n    </div>\n  );\n}\n\n// Login.propTypes = {\n//   setToken: PropTypes.func.isRequired\n// }","import React from 'react';\nimport $ from 'jquery';\nimport jQuery from 'jquery';\n\nfunction getCookie(name) {\n    var cookieValue = null;\n    if (document.cookie && document.cookie !== '') {\n        var cookies = document.cookie.split(';');\n        for (var i = 0; i < cookies.length; i++) {\n            var cookie = jQuery.trim(cookies[i]);\n            if (cookie.substring(0, name.length + 1) === (name + '=')) {\n                cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n                break;\n            }\n        }\n    }\n    return cookieValue;\n}\nvar csrftoken = getCookie('csrftoken');\n\nconst CSRFToken = () => {\n    return (\n        <input type=\"hidden\" name=\"csrfmiddlewaretoken\" value={csrftoken} />\n    );\n};\nexport default CSRFToken;","/* login.jsx */\nimport React , { useState, useContext } from \"react\";\nimport logo from \"../assets/TaskLogoTemp.png\";\nimport \"../login.css\"\nimport { useNavigate } from \"react-router-dom\";\nimport GlobalContext from \"../context/GlobalContext\";\n//import GoogleLogin from 'react-google-login';\nimport CSRFToken from './csrftoken';\n\n\nconst OtherMethods = props => (\n<div id=\"alternativeLogin\">\n  <label>Or sign in with:</label>\n  <div id=\"iconGroup\">\n  {/* <GoogleLogin\n          clientId=\"<Google Client ID>\"\n          buttonText=\"LOGIN WITH GOOGLE\"\n          onSuccess={responseGoogle}\n          onFailure={responseGoogle}\n        /> */}\n  </div>\n</div>\n);\n\nconst Google = props => (\n  <a href=\"http://localhost:8000/accounts/google/login/?process=\" id=\"googleIcon\" ></a>\n);\n\n\nexport default function Register({ storeToken}) {  \n  const navigator = useNavigate();\n  const [username, setUsername] = useState();\n  const [password1, setPassword1] = useState();\n  const [password2, setPassword2] = useState();\n  const [email, setEmail] = useState();\n  const axios = require('axios');\n\n  // async function loginUser(details) {\n  //   const requestOptions = {\n  //     method: 'POST',\n  //     body: details\n  //   };\n\n  //   const response = await fetch('http://localhost:8000/rest-auth/registration/', requestOptions)\n  //   let data = await response.json()\n  //   return data\n  // }\n\n  function getEmail() {\n    return axios.get(`/users?username=${username}`)\n     .then(function ({data}) {\n         // handle success\n        localStorage.setItem('UserEmail', email)\n         return (data[0]['email']);\n   })\n }\n\n  function loginUser(details) {\n    console.log(\"currently logging\");\n    console.log(details);\n    const axios = require('axios');\n    return axios.post('/rest-auth/login/', details\n        ).then(function (data) {\n          console.log(\"this is key: \");\n          console.log(data[\"data\"][\"key\"]);\n          localStorage.setItem('Token', data[\"data\"][\"key\"])\n        })\n        .catch(function (error) {\n            console.log(error);\n        });\n  }\n\n  function registerUser(registerDetails) {\n    console.log(\"currently registering\");\n    console.log(registerDetails);\n    const axios = require('axios');\n    return axios.post('/rest-auth/registration/', registerDetails\n        ).then(function (data) {\n          console.log(\"sign up successfully!\");\n        })\n        .catch(function (error) {\n            console.log(error);\n        });\n  }\n\n  async function handleSubmit(e){\n    e.preventDefault();\n    const loginInfo = {\n      \"username\": username,\n      \"password\": password1\n    }\n\n    const registerInfo = {\n      \"username\": username,\n      \"email\": email,\n      \"password1\": password1,\n      \"password2\": password2\n    }\n\n    try {\n      await registerUser(registerInfo);\n      await loginUser(loginInfo);\n      await getEmail().then((email) => {\n        console.log(\"this is email\");\n        console.log(email);\n      });\n      navigator('/homepage');\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  // const handleSubmit = async e => {\n    // //e.preventDefault();\n    // var formData = new FormData();\n    // formData.append(\"username\", username);\n    // formData.append(\"email\", email);\n    // formData.append(\"password1\", password1);\n    // formData.append(\"password\", password1);\n    // const data =  await loginUser(\n    //   formData\n    // );\n    // console.log(\"submit\");\n    // console.log(data);\n    // const token = data['key'];\n    // console.log(token);\n    // if (token) setToken(\"Token \" + token);\n    // //console.log(getToken());\n  // }\n\n  return ( \n    <div className=\"h-screen bg-gradient-to-r from-blue-400 via-purple-500 to-pink-500 pt-3 pl-3 pb-3\">\n      <div className=\"text-center mt-12\">\n        <div className=\"flex items-center justify-center\">\n          <img src={logo} alt=\"calendar\" className=\"mb-1 mr-2 ml-1 w-20 h-20 inline-block mt-2 mb-8\" />\n        </div>            \n\n        <h2 className=\"text-4xl tracking-tight\">\n          Sign Up\n        </h2>\n      </div>\n      <div className=\"flex justify-center my-8 mx-4 md:mx-0\">\n        <form onSubmit = {handleSubmit} className=\"w-full max-w-xl bg-white rounded-lg shadow-md p-6\">\n            <div className=\"flex flex-wrap -mx-3 mb-6\">\n              <div className=\"w-full md:w-full px-3 mb-6\">\n                  <label className=\"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2\" htmlFor='Password'>E-mail</label>\n                  <input className=\"appearance-none block w-full bg-white text-gray-900 font-medium border border-gray-400 rounded-lg py-3 px-3 leading-tight focus:outline-none\" type='email'  required \n                    onChange={e => setEmail(e.target.value)}\n                  />\n              </div>\n              <div className=\"w-full md:w-full px-3 mb-6\">\n                  <label className=\"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2\" htmlFor='Password'>Username</label>\n                  <input className=\"appearance-none block w-full bg-white text-gray-900 font-medium border border-gray-400 rounded-lg py-3 px-3 leading-tight focus:outline-none\" type='username' required \n                    onChange={e => setUsername(e.target.value)}\n                  />\n              </div>\n              <div className=\"w-full md:w-full px-3 mb-6\">\n                  <label className=\"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2\" htmlFor='Password'>Password</label>\n                  <input className=\"appearance-none block w-full bg-white text-gray-900 font-medium border border-gray-400 rounded-lg py-3 px-3 leading-tight focus:outline-none\" type='password' required \n                    onChange={e => setPassword1(e.target.value)}\n                  />\n              </div>\n              <div className=\"w-full md:w-full px-3 mb-6\">\n                  <label className=\"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2\" htmlFor='Password'>Confirm</label>\n                  <input className=\"appearance-none block w-full bg-white text-gray-900 font-medium border border-gray-400 rounded-lg py-3 px-3 leading-tight focus:outline-none\" type='password' required \n                     onChange={e => setPassword2(e.target.value)}\n                  />\n              </div>\n\n              <div className=\"w-full md:w-full px-3 mb-6\">\n                  <button className=\"appearance-none block w-full bg-blue-600 text-gray-100 font-bold border border-gray-200 rounded-lg py-3 px-3 leading-tight hover:bg-blue-500 focus:outline-none focus:bg-white focus:border-gray-500\"\n                    type=\"submit\"\n                  >\n                    Create Account  \n                  </button>\n              </div>\n              <div className=\"mx-auto -mb-6 pb-1\">\n                  <span className=\"text-center text-xs text-gray-700\">or sign up with</span>\n              </div>\n              <div className=\"flex items-center w-full mt-4\">\n                  <div className=\"w-full md:w-1/3 px-3 pt-4 mx-2 border-t border-gray-400\">\n                  </div>\n                  <div className=\"w-full md:w-32 px-8 pt-4 mx-2\">\n                    <button className=\"appearance-none flex items-center justify-center block w-full bg-gray-100 text-gray-700 shadow border border-gray-500 rounded-lg py-3 px-3 leading-tight hover:bg-gray-200 hover:text-gray-700 focus:outline-none\">\n                      <img src=\"https://www.freepnglogos.com/uploads/google-logo-png/google-logo-png-webinar-optimizing-for-success-google-business-webinar-13.png\"\n                        alt=\"calendar\" className=\"w-8 h-8 inline-block\" \n                      />\n                    </button>\n                  </div>\n                  <div className=\"w-full md:w-1/3 px-3 pt-4 mx-2 border-t border-gray-400\">\n                  </div>\n              </div>\n            </div>\n        </form>\n      </div>\n    </div>\n  );\n}\n","import dayjs from \"dayjs\";\n\nexport function getMonth(month = dayjs().month()) {\n  month = Math.floor(month);\n  const year = dayjs().year();\n  const firstDayOfTheMonth = dayjs(new Date(year, month, 1)).day();\n  let currentMonthCount = 0 - firstDayOfTheMonth;\n  const daysMatrix = new Array(5).fill([]).map(() => {\n    return new Array(7).fill(null).map(() => {\n      currentMonthCount++;\n      return dayjs(new Date(year, month, currentMonthCount));\n    });\n  });\n  return daysMatrix;\n}\n","import dayjs from \"dayjs\";\nimport React, { useContext, useEffect } from \"react\";\nimport GlobalContext from \"../../context/GlobalContext\";\nexport default function CalendarHeader() {\n  const { monthIndex, setMonthIndex } = useContext(GlobalContext);\n  function handlePrevMonth() {\n    setMonthIndex(monthIndex - 1);\n  }\n  function handleNextMonth() {\n    setMonthIndex(monthIndex + 1);\n  }\n  function handleReset() {\n    setMonthIndex(\n      monthIndex === dayjs().month()\n        ? monthIndex + Math.random()\n        : dayjs().month()\n    );\n  }\n\n  useEffect(() => {\n    handleReset()\n  }, [])\n\n  return (\n    <header className=\"px-4 py-2 flex items-center\">\n      <h1 className=\"mr-10 text-xl text-gray-500 fond-bold\">\n        Task View\n      </h1>\n      <button\n        onClick={handleReset}\n        className=\"border rounded py-1.5 px-4 mr-5\"\n      >\n        Today\n      </button>\n      <button onClick={handlePrevMonth}>\n        <span className=\"material-icons-outlined cursor-pointer text-gray-600 mx-2\">\n          chevron_left\n        </span>\n      </button>\n      <button onClick={handleNextMonth}>\n        <span className=\"material-icons-outlined cursor-pointer text-gray-600 mx-2\">\n          chevron_right\n        </span>\n      </button>\n      <h2 className=\"ml-4 text-xl text-gray-500 font-bold\">\n        {dayjs(new Date(dayjs().year(), monthIndex)).format(\n          \"MMMM YYYY\"\n        )}\n      </h2>\n    </header>\n  );\n}\n","import dayjs from \"dayjs\";\nimport React, { useContext, useState, useEffect } from \"react\";\nimport GlobalContext from \"../../context/GlobalContext\";\n\nexport default function Day({ day, rowIdx }) {\n  const [dayEvents, setDayEvents] = useState([]);\n\n  const {\n    setDaySelected,\n    setShowEventModal,\n    setSelectedEvent,\n    currentGroup,\n    showEventModal,\n  } = useContext(GlobalContext);\n\n  const token = `Token ${localStorage.getItem(\"Token\")}`;\n\n  function getTasks() {\n    console.log(\"get task!\");\n    const axios = require('axios');\n    return axios.get('/tasks/', {\n      headers: {\n        'Authorization': token\n      }\n    }).then(function ({ data }) {\n      // handle success\n      return (data);\n    })\n  }\n\n  async function fetchTaskInfo() {\n    await getTasks().then((tasks) => {\n      const filteredTasks = (tasks.sort((a, b) => a.deadline - b.deadline)\n        .filter((evt) => (evt.assigned_to === localStorage.getItem(\"UserEmail\") && evt.group === currentGroup && evt.done_at === null)))\n      setDayEvents(filteredTasks);\n    });\n  }\n\n  // useEffect(() => {\n  //   const events = filteredEvents.filter(\n  //     (evt) => (dayjs(evt.day).format(\"DD-MM-YY\") === day.format(\"DD-MM-YY\") && evt.popped)\n  //   );\n  //   setDayEvents(events);\n  // }, [filteredEvents, day]);\n\n  useEffect(() => {\n    fetchTaskInfo();\n  }, [currentGroup, showEventModal]);\n\n  function getCurrentDayClass() {\n    return day.format(\"DD-MM-YY\") === dayjs().format(\"DD-MM-YY\")\n      ? \"bg-blue-600 text-white rounded-full w-7\"\n      : \"\";\n  }\n\n  function handleBurndownBar() {\n    if (Number(day.format(\"MM\")) < Number(dayjs().format(\"MM\"))) {\n      return <div className={`bg-black p-1 mt-2 m-26 rounded mb-1`} />;\n    } else if (day.diff(dayjs(), 'day') >= 7) {\n      return <div className={`bg-blue-500 p-1 mt-2 m-0 rounded mb-1`} />;\n    } else if (Number(day.format(\"DD\")) < Number(dayjs().format(\"DD\")) && Number(day.format(\"MM\")) === Number(dayjs().format(\"MM\"))) {\n      return <div className={`bg-black p-1 mt-2 m-26 rounded mb-1`} />;\n    }\n\n    const dayDiff = Number(day.format(\"DD\")) - Number(dayjs().format(\"DD\"));\n\n    if (dayDiff === 0) return <div className={`bg-red-500 p-1 mt-2 m-26 rounded mb-1`} />\n    else if (dayDiff === 1 || (dayjs().diff(day, 'month', true) < 0 && dayDiff == -29)) return <div className={`bg-red-500 p-1 mt-2 m-24 rounded mb-1`} />\n    else if (dayDiff === 2 || (dayjs().diff(day, 'month', true) < 0 && dayDiff == -28)) return <div className={`bg-red-500 p-1 mt-2 m-20 rounded mb-1`} />\n    else if (dayDiff === 3 || (dayjs().diff(day, 'month', true) < 0 && dayDiff == -27)) return <div className={`bg-yellow-500 p-1 mt-2 m-16 rounded mb-1`} />\n    else if (dayDiff === 4 || (dayjs().diff(day, 'month', true) < 0 && dayDiff == -26)) return <div className={`bg-yellow-500 p-1 mt-2 m-12 rounded mb-1`} />;\n    else if (dayDiff === 5 || (dayjs().diff(day, 'month', true) < 0 && dayDiff == -25)) return <div className={`bg-yellow-500 p-1 mt-2 m-8 rounded mb-1`} />\n    else return <div className={`bg-green-500 p-1 mt-2 m-4 rounded mb-1`} />;\n  }\n\n  return (\n    <div className=\"border border-blue-400 border-opacity-25 px-1\">\n      <header className=\"flex flex-col items-center\">\n        {rowIdx === 0 && (\n          <p className=\"text-sm mt-1\">\n            {day.format(\"ddd\").toUpperCase()}\n          </p>\n        )}\n        <p\n          className={`text-sm p-1 my-1 text-center  ${getCurrentDayClass()}`}\n        >\n          {day.format(\"DD\")}\n        </p>\n      </header>\n      <div\n        className=\"flex-1 cursor-pointer pl-2\"\n        onClick={() => {\n          setDaySelected(day);\n          setShowEventModal(true);\n        }}\n      >\n        {dayEvents.map((task, idx) => (\n          day.format(\"YYYY-MM-DD\") === (task.deadline.split(\" \")[0]) &&\n          <div\n            key={idx}\n            onClick={() => setSelectedEvent(task)}\n            className={`bg-blue-200 p-1 mr-3 text-gray-600 text-sm rounded mb-1 truncate text-center`}\n          >\n            {task.name}\n            {handleBurndownBar()}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\n","import React from \"react\";\nimport Day from \"./Day\";\nexport default function Month({ month }) {\n  return (\n    <div className=\"flex-1 grid grid-cols-7 grid-rows-5\">\n      {month.map((row, i) => (\n        <React.Fragment key={i}>\n          {row.map((day, idx) => (\n            <Day day={day} key={idx} rowIdx={i} />\n          ))}\n        </React.Fragment>\n      ))}\n    </div>\n  );\n}\n","import dayjs from \"dayjs\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport GlobalContext from \"../../context/GlobalContext\";\nimport { getMonth } from \"../../util\";\n\nexport default function SmallCalendar() {\n  const [currentMonthIdx, setCurrentMonthIdx] = useState(\n    dayjs().month()\n  );\n  const [currentMonth, setCurrentMonth] = useState(getMonth());\n  useEffect(() => {\n    setCurrentMonth(getMonth(currentMonthIdx));\n  }, [currentMonthIdx]);\n\n  const {\n    monthIndex,\n    setSmallCalendarMonth,\n    setDaySelected,\n    daySelected,\n  } = useContext(GlobalContext);\n\n  useEffect(() => {\n    setCurrentMonthIdx(monthIndex);\n  }, [monthIndex]);\n\n  function handlePrevMonth() {\n    setCurrentMonthIdx(currentMonthIdx - 1);\n  }\n  function handleNextMonth() {\n    setCurrentMonthIdx(currentMonthIdx + 1);\n  }\n  function getDayClass(day) {\n    const format = \"DD-MM-YY\";\n    const nowDay = dayjs().format(format);\n    const currDay = day.format(format);\n    const slcDay = daySelected && daySelected.format(format);\n    if (nowDay === currDay) {\n      return \"bg-blue-500 rounded-full text-white\";\n    } else if (currDay === slcDay) {\n      return \"bg-blue-100 rounded-full text-blue-600 font-bold\";\n    } else {\n      return \"\";\n    }\n  }\n  return (\n    <div className=\"mt-3 bg-blue-300 rounded-lg\">\n      <header className=\"m-2 flex justify-between\">\n        <p className=\"text-gray-500 font-bold\">\n          {dayjs(new Date(dayjs().year(), currentMonthIdx)).format(\n            \"MMMM YYYY\"\n          )}\n        </p>\n        <div>\n          <button onClick={handlePrevMonth}>\n            <span className=\"material-icons-outlined cursor-pointer text-gray-600 mx-2\">\n              chevron_left\n            </span>\n          </button>\n          <button onClick={handleNextMonth}>\n            <span className=\"material-icons-outlined cursor-pointer text-gray-600 mx-2\">\n              chevron_right\n            </span>\n          </button>\n        </div>\n      </header>\n      <div className=\"m-1 grid grid-cols-7 grid-rows-6\">\n        {currentMonth[0].map((day, i) => (\n          <span key={i} className=\"text-sm py-1 text-center\">\n            {day.format(\"dd\").charAt(0)}\n          </span>\n        ))}\n        {currentMonth.map((row, i) => (\n          <React.Fragment key={i}>\n            {row.map((day, idx) => (\n              <button\n                key={idx}\n                onClick={() => {\n                  setSmallCalendarMonth(currentMonthIdx);\n                  setDaySelected(day);\n                }}\n                className={`py-1 w-full ${getDayClass(day)}`}\n              >\n                <span className=\"text-sm\">{day.format(\"D\")}</span>\n              </button>\n            ))}\n          </React.Fragment>\n        ))}\n      </div>\n    </div>\n  );\n}\n","import React, { useContext, useState } from \"react\";\nimport GlobalContext from \"../../context/GlobalContext\";\nimport SmallCalendar from \"./SmallCalendar\";\nimport dayjs from \"dayjs\";\n\nexport default function EventModal() {\n  const {\n    setShowEventModal,\n    daySelected,\n    setDaySelected,\n    selectedEvent,\n    segmentSelected,\n    currentGroup,\n    currentUser,\n    setCurrentUser,\n  } = useContext(GlobalContext);\n\n  const [name, setName] = useState(\n    selectedEvent ? selectedEvent.name : \"\"\n  );\n\n  const [description, setDescription] = useState(\n    selectedEvent ? selectedEvent.description : \"\"\n  );\n\n  const [score, setScore] = useState(\n    selectedEvent ? selectedEvent.score : 100\n  );\n\n  const token = `Token ${localStorage.getItem(\"Token\")}`;\n\n  const [miniCalendarOpen, setMiniCalendarOpen] = useState(false);\n\n  function newHandleDoneTask() {\n    console.log(\"creating new task\");\n    const updatedTask = {\n      \"score\": selectedEvent.score,\n      \"done_at\": dayjs().format(\"YYYY-MM-DD HH:mm:ss\"),\n    };\n\n    const axios = require('axios');\n    return axios.put(`/tasks/${selectedEvent.id}/`, updatedTask, {\n      headers: {\n        'Authorization': token\n      }\n    }\n    ).then(function () {\n      setShowEventModal(false);\n    })\n      .catch(function (error) {\n        console.log(error);\n      });\n\n  }\n\n  // function handleDoneTask(newScore) {\n  //   console.log(\"task done\");\n  //   let newUserInfo = currentUser;\n  //   newUserInfo.score += newScore;\n\n  //   const axios = require('axios');\n  //   return axios.put(`/users/${localStorage.getItem(\"UserEmail\")}/`, newUserInfo, {\n  //     headers: {\n  //       'Authorization': token\n  //     }\n  //   }\n  //   ).then(() => {\n  //     setCurrentUser(newUserInfo);\n  //     handleDelete(selectedEvent);\n  //   })\n  // }\n\n\n  function handleSubmit() {\n    console.log(\"creating new task\");\n    const calendarTask = {\n      \"group\": currentGroup,\n      \"name\": name === \"\" ? \"Untitled Task\" : name,\n      \"description\": description === \"\" ? \"......\" : description,\n      \"score\": Number(score) === 0 ? 0 : Number(score),\n      \"deadline\": daySelected.format(\"YYYY-MM-DD HH:mm:ss\"),\n    };\n\n    const axios = require('axios');\n    if (selectedEvent) {\n      return axios.put(`/tasks/${selectedEvent.id}/`, calendarTask, {\n        headers: {\n          'Authorization': token\n        }\n      }\n      ).then(function () {\n        setShowEventModal(false);\n      })\n        .catch(function (error) {\n          console.log(error);\n        });\n    } else {\n      return axios.post('/tasks/', calendarTask, {\n        headers: {\n          'Authorization': token\n        }\n      }\n      ).then(function () {\n        setShowEventModal(false);\n      })\n        .catch(function (error) {\n          console.log(error);\n        });\n    }\n  }\n\n  function handleDelete(selectedEvent) {\n    console.log(\"Delete a task\");\n    const axios = require('axios');\n    return axios.delete(`/tasks/${selectedEvent.id}/`, {\n      headers: {\n        'Authorization': token\n      }\n    }\n    ).then(function () {\n      setShowEventModal(false);\n    })\n      .catch(function (error) {\n        console.log(error);\n      });\n  }\n\n  return (\n    <div className=\"h-screen w-full fixed left-0 top-0 flex justify-center items-center\">\n      <div className=\"bg-white rounded-lg shadow-2xl w-1/4\">\n        <header className=\"bg-gray-100 px-4 py-2 flex justify-between items-center\">\n          <span className=\"material-icons-outlined text-gray-400\">\n            drag_handle\n          </span>\n          <div>\n            {selectedEvent ?\n              <span\n                onClick={() => {\n                  handleDelete(selectedEvent);\n                  setShowEventModal(false);\n                  setDaySelected(dayjs());\n                }}\n                className=\"material-icons-outlined text-gray-400 cursor-pointer\"\n              >\n                delete\n              </span> : \"\"\n            }\n            <button onClick={() => {\n              setShowEventModal(false);\n              setDaySelected(dayjs());\n            }}>\n              <span className=\"material-icons-outlined text-gray-400\">\n                close\n              </span>\n            </button>\n          </div>\n        </header>\n        <div className=\"p-3\">\n          <div className=\"grid grid-cols-1/5 items-end gap-y-7\">\n            <div></div>\n            {\n              segmentSelected === \"TaskPool\" ?\n                <input\n                  type=\"text\"\n                  name=\"name\"\n                  placeholder=\"Add Name\"\n                  value={name}\n                  required\n                  className=\"pt-3 border-0 text-gray-600 text-xl font-semibold pb-2 w-full border-b-2 border-gray-200 focus:outline-none focus:ring-0 focus:border-blue-500\"\n                  onChange={(e) => setName(e.target.value)}\n                /> :\n                <input\n                  type=\"text\"\n                  name=\"name\"\n                  value={name}\n                  readOnly\n                  className=\"pt-3 border-0 text-gray-600 text-xl font-semibold pb-2 w-full border-b-2 border-gray-200 focus:outline-none focus:ring-0 focus:border-blue-500\"\n                />\n            }\n            <span className=\"material-icons-outlined text-gray-400\">\n              event\n            </span>\n            <span>\n              {\n                segmentSelected === \"TaskPool\" ?\n                  <p className=\"cursor-pointer\" onClick={() => { setMiniCalendarOpen(!miniCalendarOpen) }}>\n                    {daySelected.format(\"dddd, MMMM DD\")}\n                  </p> :\n                  <p className=\"\">\n                    {daySelected.format(\"dddd, MMMM DD\")}\n                  </p>\n              }\n              <span className=\"absolute\">\n                {miniCalendarOpen && <SmallCalendar />}\n              </span>\n            </span>\n\n            <span className=\"material-icons-outlined text-gray-400\">\n              segment\n            </span>\n            {segmentSelected === \"TaskPool\" ?\n              <input\n                type=\"text\"\n                name=\"description\"\n                placeholder=\"description...\"\n                value={description}\n                required\n                autoComplete=\"off\"\n                className=\"pt-3 border-0 text-gray-600 pb-2 w-full border-b-2 border-gray-200 focus:outline-none focus:ring-0 focus:border-blue-500\"\n                onChange={(e) => setDescription(e.target.value)}\n              /> :\n              <input\n                type=\"text\"\n                name=\"description\"\n                placeholder=\"description...\"\n                value={description}\n                readOnly\n                className=\"pt-3 border-0 text-gray-600 pb-2 w-full border-b-2 border-gray-200 focus:outline-none focus:ring-0 focus:border-blue-500\"\n              />\n            }\n\n            <span className=\"material-icons-outlined text-gray-400\">\n              sports_score\n            </span>\n            {\n              segmentSelected === \"TaskPool\" ?\n                <input\n                  type=\"number\"\n                  name=\"score\"\n                  placeholder=\"0\"\n                  value={score}\n                  required\n                  className=\"pt-3 border-0 text-gray-600 pb-2 w-full border-b-2 border-gray-200 focus:outline-none focus:ring-0 focus:border-blue-500\"\n                  onChange={(e) => setScore(e.target.value)}\n                />\n                :\n                <input\n                  type=\"number\"\n                  name=\"score\"\n                  placeholder=\"score...\"\n                  value={score}\n                  readOnly\n                  className=\"pt-3 border-0 text-gray-600 pb-2 w-full border-b-2 border-gray-200 focus:outline-none focus:ring-0 focus:border-blue-500\"\n                />\n            }\n          </div>\n        </div>\n        <footer className=\"flex justify-end border-t p-3 mt-5\">\n          {segmentSelected === \"TaskPool\" ?\n            <button\n              onClick={() => {\n                handleSubmit();\n                setDaySelected(dayjs());\n              }}\n              className=\"bg-blue-500 hover:bg-blue-600 px-6 py-2 rounded text-white\"\n            >\n              Save\n            </button>\n            :\n            <button\n              onClick={() => {\n                // handleDoneTask(score);\n                newHandleDoneTask();\n                setDaySelected(dayjs());\n              }}\n              className=\"bg-blue-500 hover:bg-blue-600 px-6 py-2 rounded text-white\"\n            >\n              Done\n            </button>\n          }\n        </footer>\n      </div>\n    </div>\n  );\n}\n","import React, { useState, useContext, useEffect } from \"react\";\nimport { getMonth } from \"../../util\";\nimport CalendarHeader from \"../..//components/EventViewComponents/CalendarHeader\"\nimport Month from \"../../components/EventViewComponents/Month\";\nimport GlobalContext from \"../../context/GlobalContext\";\nimport EventModal from \"../../components/EventViewComponents/EventModal\";\n\nexport default function EventView() {\n    const [currenMonth, setCurrentMonth] = useState(getMonth());\n    const { monthIndex, showEventModal } = useContext(GlobalContext);\n\n    useEffect(() => {\n        setCurrentMonth(getMonth(monthIndex));\n    }, [monthIndex]);\n\n    return (\n        <React.Fragment>\n            {showEventModal && <EventModal />}\n            <div className=\"h-screen flex flex-col \">\n                <CalendarHeader />\n                <div className=\"flex flex-1 bg-primary bg-opacity-50 sm:rounded-lg\">\n                    <Month month={currenMonth} />\n                </div>\n            </div>\n        </React.Fragment >\n    )\n}\n","import React, { useContext } from 'react'\nimport logo from \"../assets/TaskLogoTemp.png\";\nimport { Navbar, Nav } from 'react-bootstrap';\nimport GlobalContext from \"../context/GlobalContext\";\n\n\nexport default function MainHeader() {\n    const { setSegmentSelected } = useContext(GlobalContext);\n    return (\n        <Navbar fixed=\"top\">\n            <Nav className=\"ml-auto\">\n                <Navbar.Brand href=\"#home\" >\n                    <img src={logo} alt=\"calendar\" className=\"mb-1 mr-2 ml-1 w-12 h-12 inline-block\" />\n                    <h1 className=\"mt-2 mr-10 text-3xl text-gray-200 font-mono inline-block font-medium\" >\n                        PopTask\n                    </h1>\n                </Navbar.Brand>\n                <button\n                    onClick={() => { setSegmentSelected(\"TaskView\") }}\n                    className=\"bg-blue-400 hover:bg-blue-600 ml-12 mr-12 px-6 py-2 rounded text-white\"\n                >\n                    Task View\n                </button>\n                <button\n                    onClick={() => { setSegmentSelected(\"TaskPool\") }}\n                    className=\"bg-purple-400 hover:bg-purple-600 ml-12 mr-12 px-6 py-2 rounded text-white float-center\"\n                >\n                    Task Pool\n                </button>\n                <button\n                    onClick={() => { setSegmentSelected(\"Leaderboard\") }}\n                    className=\"bg-red-400 hover:bg-red-500 ml-12 mr-12 px-6 py-2 rounded text-white float-center\"\n                >\n                    LeaderBoard\n                </button>\n            </Nav>\n        </Navbar>\n\n    )\n}\n","import React, { Fragment, useContext, useState, useEffect} from 'react'\nimport { Menu, Transition } from '@headlessui/react'\nimport CSRFToken from './csrftoken';\nimport GlobalContext from '../context/GlobalContext';\nimport { useNavigate } from \"react-router-dom\";\n\nfunction classNames(...classes) {\n    return classes.filter(Boolean).join(' ')\n}\n\nexport default function AccountManagement() {\n    const navigator = useNavigate();\n    const [curretnUserName, setCurretnUserName] = useState(\"\")\n    const axios = require('axios');\n\n    function getUser() {\n        return axios.get(`/users/${localStorage.getItem(\"UserEmail\")}/`)\n        .then(function ({data}) {\n            // handle success\n            return (data);\n        })\n    }\n\n    function logout() {\n        console.log(\"logout!!\");\n        axios.post(`/rest-auth/logout/`).then(() => {\n            localStorage.clear();\n        }) \n        .catch(function (error) {\n            console.log(error);\n        });\n        navigator('/login');\n    }    \n\n    async function fetchUserInfo(){\n        if (localStorage.getItem(\"Token\") === null) {\n            console.log(\"redirect!!!!\");\n            navigator('/login');\n        } else{\n            await getUser().then((user) => {\n                setCurretnUserName(user.username);\n            });\n        }\n    }\n\n    useEffect(() => {\n        fetchUserInfo();\n    }, [])\n\n    return (\n        <div className=\"flex flex-col justify-between items-center h-full pb-6 px-6 py-4 w-full space-y-32\">\n            <div className=\" flex justify-between items-center w-full\">\n                <div className=\"flex justify-center items-center space-x-4\">\n                    <div>\n                        <img className=\"h-10 w-10 rounded-full\" src=\"https://yorktonrentals.com/wp-content/uploads/2017/06/usericon.png\" alt=\"avatar\" />\n                    </div>\n                    <div className=\"flex justify-start flex-col items-start\">\n                        <p className=\"text-sm leading-5 text-white\">{curretnUserName}</p>\n                        <p className=\"text-xs leading-3 text-gray-300\">{localStorage.getItem(\"UserEmail\")}</p>\n                    </div>\n                </div>\n                <Menu as=\"div\" className=\"ml-1 relative inline-block text-left\">\n                    <div>\n                    <Menu.Button>\n                        <svg className=\"cursor-pointer\" width={24} height={24} viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                            <path d=\"M10.325 4.317C10.751 2.561 13.249 2.561 13.675 4.317C13.7389 4.5808 13.8642 4.82578 14.0407 5.032C14.2172 5.23822 14.4399 5.39985 14.6907 5.50375C14.9414 5.60764 15.2132 5.65085 15.4838 5.62987C15.7544 5.60889 16.0162 5.5243 16.248 5.383C17.791 4.443 19.558 6.209 18.618 7.753C18.4769 7.98466 18.3924 8.24634 18.3715 8.51677C18.3506 8.78721 18.3938 9.05877 18.4975 9.30938C18.6013 9.55999 18.7627 9.78258 18.9687 9.95905C19.1747 10.1355 19.4194 10.2609 19.683 10.325C21.439 10.751 21.439 13.249 19.683 13.675C19.4192 13.7389 19.1742 13.8642 18.968 14.0407C18.7618 14.2172 18.6001 14.4399 18.4963 14.6907C18.3924 14.9414 18.3491 15.2132 18.3701 15.4838C18.3911 15.7544 18.4757 16.0162 18.617 16.248C19.557 17.791 17.791 19.558 16.247 18.618C16.0153 18.4769 15.7537 18.3924 15.4832 18.3715C15.2128 18.3506 14.9412 18.3938 14.6906 18.4975C14.44 18.6013 14.2174 18.7627 14.0409 18.9687C13.8645 19.1747 13.7391 19.4194 13.675 19.683C13.249 21.439 10.751 21.439 10.325 19.683C10.2611 19.4192 10.1358 19.1742 9.95929 18.968C9.7828 18.7618 9.56011 18.6001 9.30935 18.4963C9.05859 18.3924 8.78683 18.3491 8.51621 18.3701C8.24559 18.3911 7.98375 18.4757 7.752 18.617C6.209 19.557 4.442 17.791 5.382 16.247C5.5231 16.0153 5.60755 15.7537 5.62848 15.4832C5.64942 15.2128 5.60624 14.9412 5.50247 14.6906C5.3987 14.44 5.23726 14.2174 5.03127 14.0409C4.82529 13.8645 4.58056 13.7391 4.317 13.675C2.561 13.249 2.561 10.751 4.317 10.325C4.5808 10.2611 4.82578 10.1358 5.032 9.95929C5.23822 9.7828 5.39985 9.56011 5.50375 9.30935C5.60764 9.05859 5.65085 8.78683 5.62987 8.51621C5.60889 8.24559 5.5243 7.98375 5.383 7.752C4.443 6.209 6.209 4.442 7.753 5.382C8.753 5.99 10.049 5.452 10.325 4.317Z\" stroke=\"white\" strokeWidth=\"1.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n                            <path d=\"M12 15C13.6569 15 15 13.6569 15 12C15 10.3431 13.6569 9 12 9C10.3431 9 9 10.3431 9 12C9 13.6569 10.3431 15 12 15Z\" stroke=\"white\" strokeWidth=\"1.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n                        </svg>\n                    </Menu.Button>\n                    </div>\n                    <Transition\n                        as={Fragment}\n                        enter=\"transition ease-out duration-100\"\n                        enterFrom=\"transform opacity-0 scale-95\"\n                        enterTo=\"transform opacity-100 scale-100\"\n                        leave=\"transition ease-in duration-75\"\n                        leaveFrom=\"transform opacity-100 scale-100\"\n                        leaveTo=\"transform opacity-0 scale-95\"\n                    >\n                        <Menu.Items className=\"origin-top-right absolute mt-2 w-32 rounded-md shadow-lg bg-white ring-1 ring-black ring-opacity-5 focus:outline-none\">\n                            <div className=\"py-1\">\n                                <Menu.Item>\n                                {({ active }) => (\n                                    <button\n                                        onClick={() => logout()}\n                                        className={classNames(\n                                            active ? 'bg-gray-100 text-gray-900' : 'text-gray-700',\n                                            'text-center px-4 py-2 text-sm w-32'\n                                        )}\n                                    >\n                                        Sign out\n                                        <CSRFToken />\n                                    </button>\n                                )}\n                                </Menu.Item>\n                            </div>\n                        </Menu.Items>\n                    </Transition>\n                </Menu>\n            </div>\n        </div>\n    )\n}\n","import React,{useEffect, useState, useRef, useContext} from \"react\";\nimport GlobalContext from \"../context/GlobalContext\";\nimport AccountManagement from \"./AccountManagement\";\n\nexport default function Sidebar() {\n    const [teamsInfo, setTeamsInfo] = useState([])\n    const [selectedTeam, setSelectedTeam] = useState([])\n    const [searchUserEmail, setSearchUserEmail] = useState(\"\");\n    const [groupNameEntry, setGroupNameEntry] = useState(\"\");\n    const [isFirstTime, setIsFirstTime] = useState(true);\n    const [delay, setDelay] = useState(500);\n\n    const token = `Token ${localStorage.getItem(\"Token\")}`;\n    \n    const currentUserEmail = localStorage.getItem(\"UserName\");\n    \n    const { setCurrentGroup, currentUser, setCurrentUser, allUsers, setAllUsers, setAllGroupsInfo} \n        = useContext(GlobalContext);\n\n    function getGroup() {\n        const axios = require('axios');\n        return axios.get('/groups/', {\n            headers: {\n              'Authorization': token\n            }\n          }).then(function ({data}) {\n                // handle success\n                setAllGroupsInfo(data);\n                return (data);\n            })\n    }\n\n    async function fetchGroupInfo(){\n        let curUser = \"\";\n        try {\n            await getUsers().then((users) => {\n                setAllUsers(users);\n                for(let i = 0; i < users.length; i++){\n                    if(users[i].email === localStorage.getItem(\"UserEmail\")){\n                        setCurrentUser(users[i]);\n                        curUser = users[i];\n                    }\n                }\n            });\n            await getGroup().then((groups) => {\n                setTeamsInfo(groups);\n                if(isFirstTime){\n                    const filteredGroups = groups.filter((groupVal) => curUser.mygroups.includes(groupVal.name))\n                    setSelectedTeamArray(0, filteredGroups[0])\n                    setIsFirstTime(false);\n                }\n            });\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    const setSelectedTeamArray = (teamIndex, teamVal) => {    \n        if(teamVal === undefined) return;\n        let teamArray = new Array(teamsInfo.length).fill(false);\n        teamArray[teamIndex] = !teamArray[teamIndex];\n        setCurrentGroup(teamVal.name);\n        setSelectedTeam(teamArray);\n    }\n\n    function getUsers() {\n        const axios = require('axios');\n        return axios.get('/users', {\n            headers: {\n              'Authorization': token\n            }\n          })\n            .then(function ({data}) {\n                // handle success\n                return (data);\n            })\n    }\n\n    function useInterval(callback, delay) {\n        const savedCallback = useRef();\n        // Remember the latest function.\n        useEffect(() => {\n          savedCallback.current = callback;\n        }, [callback]);\n      \n        // Set up the interval.\n        useEffect(() => {\n          function tick() {\n            savedCallback.current();\n          }\n          if (delay !== null) {\n            let id = setInterval(tick, delay);\n            return () => clearInterval(id);\n          }\n        }, [delay]);\n      }\n\n    useInterval(() => {\n        fetchGroupInfo();\n        // fetchUsersInfo();\n    }, delay);\n\n    useEffect(() => { \n        fetchGroupInfo();\n        // fetchUsersInfo();\n    }, [searchUserEmail, groupNameEntry])\n\n    function createNewGroup() {\n        console.log(\"creating new group\");\n        if(groupNameEntry === \"\") return;\n        const axios = require('axios');\n        return axios.post('/groups/', {\n            \"name\": groupNameEntry\n            }, {\n                headers: {\n                    'Authorization': token\n                }\n            }).then(function () {\n                setGroupNameEntry(\"\");\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    }\n\n    function removeGroupMember(memberName, memberList, groupName){\n        console.log(\"remove a member\");\n        const filteredList = memberList.filter((member) => (member !== memberName));\n        const axios = require('axios');\n        return axios.put(`/groups/${encodeURI(groupName)}/`, {\n            \"members\": filteredList\n            }, {headers: {\n                    'Authorization': token\n                }\n            }\n            ).then(function () {\n                console.log(\"removed\")\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    }\n\n    function removeUserItself(groupName){\n        console.log(\"remove myself\");\n        const axios = require('axios');\n        return axios.post(`/groups/${encodeURI(groupName)}/leave_group/`, {},\n            {headers: {\n                    'Authorization': token\n            }})\n            .then(function () {\n                console.log(\"removed\")\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    }\n    \n    function inviteGroupMember(newMember, memberList, groupName){\n        console.log(\"invite a member\");\n        if(currentUserEmail === newMember.email) return;\n        const updatedList = [...memberList, newMember.email]\n        const axios = require('axios');\n        // todo remove user itself\n        return axios.put(`/groups/${encodeURI(groupName)}/`, {\n            \"members\": updatedList\n            }, {headers: {\n                'Authorization': token\n            }})\n            .then(function () {\n                console.log(\"added\")\n                setSearchUserEmail(\"\");\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    }\n\n    function getAllTasks(groupName) {\n        const axios = require('axios');\n        return axios.get(`/tasks/`\n            , {headers: {\n                    'Authorization': token\n            }})\n            .then(function (data) {\n                console.log(\"get all tasks\")\n                return data['data']\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    }\n\n    function deleteTask(id) {\n        const axios = require('axios');\n        return axios.delete(`/tasks/${id}/`\n            , {headers: {\n                'Authorization': token\n            }})\n            .then(function (data) {\n                console.log(\"deleted task\")\n                return data\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    }\n\n    async function deleteGroupClicked(groupName){\n        console.log(\"delete group\");\n        //modify info of users\n        try {\n            // Delete related tasks\n            const allTasks = await getAllTasks()\n            for(let i = 0; i < allTasks.length; i++){\n                const task = allTasks[i];\n                if (task['group'] === groupName) {\n                    const res = await deleteTask(task['id'])\n                    console.log(res)\n                }\n            }\n            // delete group\n            return await removeUserItself(groupName)\n\n        } catch (error) {\n            console.log(error);\n        }\n    }\n    \n    return (\n        <div>\n            <div id=\"Main\" className=\"flex items-start h-full  w-full sm:w-80 bg-blue-500 flex-col\">\n                {teamsInfo.filter((teamVal) => currentUser.mygroups.includes(teamVal.name)).map((value, index) => \n                    <div className=\"flex flex-col justify-start items-center px-6 border-b border-white-600 w-full\" key={index}>\n                        <button onClick={() => setSelectedTeamArray(index, value)} className= {`focus:outline-none hover:text-blue-200 ${selectedTeam[index] ? \"text-blue-800\": \"text-white\"} flex justify-between items-center w-full py-5 space-x-12`}>\n                            <p className=\"text-base leading-4 font-semibold\">{value.name}</p>\n                            <svg id=\"icon1\" className={`${selectedTeam[index] ? '' : 'rotate-180'} transform duration-100`} width={24} height={24} viewBox=\"0 0 24 24\" fill=\"none\" \n                                xmlns=\"http://www.w3.org/2000/svg\">\n                                <path d=\"M18 15L12 9L6 15\" stroke=\"currentColor\" strokeWidth=\"1.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n                            </svg>\n\n                        </button>\n                        \n                        <div id=\"menu1\" className={`${selectedTeam[index] ? 'flex' : 'hidden'} justify-start  flex-col w-full md:w-auto items-start pb-1 `}>\n                            {\n                                value.members.map((memberVal, index) => \n                                    <React.Fragment key={index}>\n                                        <div className=\"flex justify-start items-center space-x-6 rounded px-3 py-2  w-full md:w-52\" key={index}>\n                                            { memberVal === value.manager ?\n                                                <p className=\"text-sm leading-4 text-green-400 text-base font-bold\">{memberVal}</p> :\n                                                <p className=\"text-sm leading-4 text-white\">{memberVal}</p>\n                                            }\n                                            { currentUser.email !== memberVal && currentUser.email === value.manager ?\n                                                <span onClick={() => removeGroupMember(memberVal, value.members, value.name)} className=\"material-icons-outlined cursor-pointer text-blue-200 hover:bg-red-500 rounded\">\n                                                    person_remove\n                                                </span> : \"\"\n                                            }\n                                            { currentUser.email === memberVal && currentUser.email !== value.manager ? \n                                                <button\n                                                    className=\"bg-blue-400 hover:bg-red-500 ml-12 mr-12 px-6 py-1 rounded text-white text-sm\"\n                                                    onClick={() => removeUserItself(value.name)}\n                                                >\n                                                    Exit\n                                                </button> : \"\"\n                                            }\n                                        </div>\n                                        { currentUser.email === memberVal && currentUser.email === value.manager ? \n                                            <div className=\"pt-2 relative text-gray-600 mt-2 mb-2\">\n                                                <input className=\"border-2 border-gray-300 bg-white h-10 px-5 pr-16 rounded-lg text-sm focus:outline-none\"\n                                                        type=\"search\" name=\"search\" placeholder=\"Enter email to invite\" value = {searchUserEmail} \n                                                        onChange={ (event) => setSearchUserEmail(event.target.value) }\n                                                />\n                                                <div className=\"absolute right-0 top-0 mt-4 mr-10\">\n                                                    <span className=\"material-icons-outlined\">\n                                                        search\n                                                    </span>\n                                                </div>\n                                                {\n                                                    allUsers.filter(user => user[\"email\"] === searchUserEmail).map((userValue, index) => \n                                                        <div key={index} className=\"pt-2 relative mx-auto text-gray-600\">\n                                                            <div key={index} className=\"border-1 border-gray-300 bg-white h-10 px-4 pr-16 rounded-lg text-sm\">\n                                                                <p className=\"pt-2 mt-2 mr-5\">{userValue.username}</p>\n                                                            </div>\n                                                            <button className=\"absolute right-0 top-0 mt-6 mr-5\">\n                                                                <span onClick = {() => inviteGroupMember(userValue, value.members, value.name)} className=\"material-icons-outlined hover:bg-blue-200 rounded cursor-pointer\">\n                                                                    person_add\n                                                                </span>\n                                                            </button>\n                                                        </div>\n                                                    )\n                                                }\n                                                <button\n                                                    className=\"bg-blue-400 hover:bg-yellow-500 ml-12 mr-12 px-6 py-1 rounded text-white text-sm mt-3\"\n                                                    onClick={() => deleteGroupClicked(value.name, currentUser.email, value.members)}\n                                                >\n                                                    Delete Group\n                                                </button>\n                                            </div> : \"\"\n                                        }\n                                    </React.Fragment>\n                                )\n                            }\n                        </div>\n                    </div>\n                )}\n                <div className=\"pt-2 relative text-gray-600 mt-2 mb-2 ml-8\">\n                    <input className=\"border-2 border-gray-300 bg-white h-10 px-5 pr-16 rounded-lg text-sm focus:outline-none\"\n                            type=\"text\" name=\"addGroup\" placeholder=\"Enter new group name\" value = {groupNameEntry} \n                            onChange={ (event) => setGroupNameEntry(event.target.value) }\n                    />\n                    <div className=\"absolute right-0 top-0 mt-3 mr-5\">\n                        <span onClick={() => createNewGroup()} className=\"material-icons-outlined hover:bg-green-200 rounded cursor-pointer\">\n                            group_add\n                        </span>\n                    </div>\n                </div>\n                <AccountManagement />\n            </div>\n        </div>\n    );\n}","import React from 'react';\n// import Team from './TeamManagementComponents/Team';\nimport 'react-pro-sidebar/dist/css/styles.css';\nimport Sidebar from './Sidebar';\n\nexport default function MainSideNav() {\n\n    return (\n        <React.Fragment>\n            <Sidebar />\n        </React.Fragment>\n    )\n}","export default __webpack_public_path__ + \"static/media/plus.8f3ab9f7.svg\";","import React, { useContext } from \"react\";\nimport plusImg from \"../../assets/plus.svg\";\nimport GlobalContext from \"../../context/GlobalContext\";\nexport default function CreateEventButton() {\n  const { setShowEventModal } = useContext(GlobalContext);\n  return (\n    <button\n      onClick={() => setShowEventModal(true)}\n      className=\"border p-1 rounded-full flex items-center shadow-md hover:shadow-2xl\"\n    >\n      <img src={plusImg} alt=\"create_event\" className=\"w-7 h-7\" />\n      <span className=\"pl-3 pr-7\"> Push Task </span>\n    </button>\n  );\n}\n","import React from 'react'\nimport CreateEventButton from \"./CreateEventButton\";\n\nexport default function PoolHeader() {\n    return (\n        <header className=\"px-4 py-2 flex items-center\">\n            <h1 className=\"mr-10 text-xl text-gray-500 fond-bold\">\n                Task Pool\n            </h1>\n            <CreateEventButton />\n      </header>\n    )\n}\n","import React, { useContext } from 'react'\nimport GlobalContext from '../../context/GlobalContext';\n\nexport default function EventCard({ task }) {\n    const { setShowEventModal, selectedEvent, setSelectedEvent, currentGroup } = useContext(GlobalContext);\n\n    const token = `Token ${localStorage.getItem(\"Token\")}`;\n\n    const currentUserEmail = localStorage.getItem(\"UserEmail\");\n\n    function handlePop() {\n        console.log(\"pop a new task\");\n        const calendarTask = {\n            \"group\": currentGroup,\n            \"name\": task.name,\n            \"description\": task.description,\n            \"score\": Number(task.score),\n            \"deadline\": (task.deadline),\n            \"assigned_to\": currentUserEmail\n          };\n    \n        const axios = require('axios');\n        return axios.put(`/tasks/${task.id}/`, calendarTask, {\n            headers: {\n              'Authorization': token\n            }\n          }\n        ).then(function () {\n            setShowEventModal(false);\n        })\n        .catch(function (error) {\n            console.log(error);\n        });\n    }\n\n    return (\n        <div className=\"rounded-lg h-80 w-3/4 text-center bg-blue-300 px-6 py-2 m-10 shadow-md\">\n            <div className={`h-1 bg-${task.label}-200`}></div>\n            <span className=\"material-icons-outlined text-black-400 cursor-pointer m-2\" onClick={() => {\n                setShowEventModal(true);\n                setSelectedEvent(task)\n            }}>\n                edit\n            </span>\n            <p className=\"break-words mt-2 font-sans text-xl text-gray-800 font-semibold\">\n                {task.name}\n            </p>\n            <p className=\"break-words mt-5 font-sans text-lg text-gray-800 text-center font-medium\">\n                {task.description}\n            </p>\n            <p className=\"mt-5 font-sans text-lg text-gray-800 text-center font-medium\">\n                {`Score: ${task.score}`}\n            </p>\n            <p className=\"mt-5 font-sans text-lg text-gray-800 text-center font-medium\">\n                {`Due By: ${(task.deadline.split(\" \")[0])}`}\n            </p>\n            <button className=\"mt-5 bg-blue-500 hover:bg-blue-700 text-white font-medium py-2 px-4 border border-blue-700 rounded\"\n                onClick = { () => {\n                    handlePop();\n                }}\n            >\n                POP-IT\n            </button>\n        </div>\n    )\n}\n","import React, { useState, useEffect, useContext, useRef } from 'react'\nimport GlobalContext from '../../context/GlobalContext';\nimport EventCard from './EventCard';\n\nexport default function PoolContent() {\n    const { currentGroup, showEventModal } = useContext(GlobalContext);\n    const [currentUsercurrentGroupUnpoppedEvents, setCurrentUsercurrentGroupUnpoppedEvents] = useState([])\n    const [delay, setDelay] = useState(500);\n\n    const token = `Token ${localStorage.getItem(\"Token\")}`;\n\n    function getTasks() {\n        console.log(\"get task!\");\n        const axios = require('axios');\n        return axios.get('/tasks/',{\n            headers: {\n              'Authorization': token\n            }\n          }).then(function ({data}) {\n                // handle success\n                return (data);\n            })\n    }\n\n    async function fetchTaskInfo(){\n        console.log(\"fetchTaskInfo\");\n        await getTasks().then((tasks) => {\n            const filteredTasks = (tasks.sort((a, b) => a.deadline - b.deadline).filter((evt) => (evt.assigned_to === null && evt.group === currentGroup)))\n            setCurrentUsercurrentGroupUnpoppedEvents(filteredTasks);\n        });\n    }\n\n    function useInterval(callback, delay) {\n        const savedCallback = useRef();\n        // Remember the latest function.\n        useEffect(() => {\n          savedCallback.current = callback;\n        }, [callback]);\n      \n        // Set up the interval.\n        useEffect(() => {\n          function tick() {\n            savedCallback.current();\n          }\n          if (delay !== null) {\n            let id = setInterval(tick, delay);\n            return () => clearInterval(id);\n          }\n        }, [delay]);\n    }\n\n    useInterval(() => {\n        fetchTaskInfo();\n    }, delay);\n\n    useEffect(() => {\n        fetchTaskInfo();\n    }, [currentGroup, showEventModal]);\n\n    return (\n        <div className=\"overflow-auto h-3/4 grid grid-cols-3 bg-blue-300 bg-opacity-50 sm:rounded-lg\">\n            {currentUsercurrentGroupUnpoppedEvents.map((evt, idx) =>\n                <EventCard task={evt} key={evt.id} />\n            )}\n        </div>\n    )\n}","import React, { useContext } from 'react'\nimport EventModal from '../EventViewComponents/EventModal'\nimport GlobalContext from \"../../context/GlobalContext\";\nimport PoolHeader from './PoolHeader';\nimport PoolContent from './PoolContent';\n\nexport default function EventPool() {\n    const { showEventModal } = useContext(GlobalContext);\n\n    return (\n        <React.Fragment>\n            {showEventModal && <EventModal />}\n            <div className=\"h-screen flex flex-col \">\n                <PoolHeader />\n                <PoolContent />\n            </div>\n        </React.Fragment>\n    )\n}\n","import React from 'react'\n\nexport default function LeaderboardHeader() {\n    return (\n        <header className=\"px-4 py-2 mt-1 mb-4 flex items-center\">\n            <h1 className=\"mr-10 text-xl text-gray-500 fond-bold\">\n                Leaderboard\n            </h1>\n            <span className=\"material-icons-outlined text-gray-600 mx-2\">\n                emoji_events\n            </span>\n      </header>\n    )\n}\n","import React, {useContext} from 'react'\nimport GlobalContext from '../../context/GlobalContext';\n\nexport default function LeaderBoardIndividual({ userInfo, rank, managerEmail }) {\n    const { groupsRankInfo } = useContext(GlobalContext);\n    const uEmail = userInfo.email;\n\n    return (\n        <React.Fragment>\n            <tr>\n                <td className=\"px-6 py-4 whitespace-nowrap\">\n                    <div className=\"flex items-center\">\n                        {\n                            rank === 0 ?\n                                <img className=\"h-10 w-10 rounded-full\" src=\"https://data.whicdn.com/images/299530921/original.png\" alt=\"\" />\n                                :\n                                <img className=\"h-10 w-10 rounded-full\" src=\"https://pbs.twimg.com/media/Dc29UPjV4AABW7u.png\" alt=\"\" />\n                        }\n                        <div className=\"ml-4\">\n                            <div className=\"text-sm font-medium text-gray-900\">\n                                {userInfo.name}\n                            </div>\n                            <div className=\"text-sm text-gray-500\">\n                                {userInfo.email}\n                            </div>\n                        </div>\n                    </div>\n                </td>\n                <td className=\"px-6 py-4 whitespace-nowrap\">\n                    <div className=\"text-sm text-gray-900\">\n                        {groupsRankInfo[uEmail]}\n                    </div>\n                </td>\n                <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                    {managerEmail === userInfo.email ? \"Owner\" : \"Member\"}\n                </td>\n                <td className=\"px-7 py-4 whitespace-nowrap text-sm text-gray-500\">\n                    {`No.${rank + 1}`}\n                </td>\n            </tr>\n        </React.Fragment>\n    )\n}\n","import React, { useState, useEffect, useContext } from 'react'\nimport GlobalContext from '../../context/GlobalContext';\nimport LeaderboardHeader from './LeaderboardHeader';\nimport LeaderBoardIndividual from './LeaderBoardIndividual';\n\nexport default function LeaderboardView() {\n    const { currentGroup, allGroupsInfo, allUsers, groupsRankInfo, setGroupsRankInfo } = useContext(GlobalContext);\n\n    const [rankUsers, setRankUsers] = useState([]);\n\n    const [managerEmail, setManagerEmail] = useState(\"\");\n\n    const token = `Token ${localStorage.getItem(\"Token\")}`;\n\n    async function getCurrentGroupInfo(){\n        allGroupsInfo.forEach(element => {\n            if(element.name === currentGroup){\n                getAllRankUsersInfo(element);\n            }\n        })\n    }\n\n    function getUserRankInfoFromGroup() {\n        if(currentGroup === \"\") return;\n        const axios = require('axios');\n        return axios.get(`/groups/${encodeURI(currentGroup)}/group_ranking/`, {\n            headers: {\n              'Authorization': token\n            }\n          }).then(function ({data}) {\n                // handle success\n                setGroupsRankInfo(data)\n            })\n    }\n\n    async function getAllRankUsersInfo(currentGroupInfo){\n        setManagerEmail(currentGroupInfo.manager);\n        let currentUserList = [];\n        for(let i = 0; i < currentGroupInfo.members.length; i++){\n            for(let j = 0; j < allUsers.length; j++){\n                if(allUsers[j].email === currentGroupInfo.members[i]){\n                    currentUserList.push(allUsers[j]);\n                }\n            }\n        }\n        await getUserRankInfoFromGroup();\n        if(currentUserList !== 0 && groupsRankInfo.length !== 0){\n            for(let i = 0; i < currentUserList.length; i++){\n                currentUserList[i].score = groupsRankInfo[currentUserList[i].email];\n            }\n        }\n        setRankUsers(currentUserList);\n    }\n\n    useEffect(() => {\n        getCurrentGroupInfo();\n    }, [currentGroup])\n\n    return (\n        <div>\n            <LeaderboardHeader />\n            <div className=\"h-screen flex flex-col\">\n                <div className=\"-my-2 overflow-x-auto sm:-mx-6 lg:-mx-8\">\n                    <div className=\"py-2 align-middle inline-block min-w-full sm:px-6 lg:px-8\">\n                        <div className=\"shadow overflow-hidden border-b border-gray-200 sm:rounded-lg\">\n                            <table className=\"min-w-full divide-y divide-gray-200\">\n                                <thead className=\"bg-gray-50\">\n                                    <tr>\n                                        <th scope=\"col\" className=\"px-12 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                                            <span className=\"material-icons-outlined  text-gray-600 px-1\">\n                                                badge\n                                            </span>\n                                            <p className=\"\">Name</p>\n                                        </th>\n                                        <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                                            <span className=\"material-icons-outlined  text-gray-600 px-2\">\n                                                sports_score\n                                            </span>\n                                            <p className=\"\">Score</p>\n                                        </th>\n                                        <th scope=\"col\" className=\"px-7 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                                            <span className=\"material-icons-outlined  text-gray-600 px-1\">\n                                                account_box\n                                            </span>\n                                            <p className=\"\">Role</p>\n                                        </th>\n                                        <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                                            <span className=\"material-icons-outlined  text-gray-600 px-1\">\n                                                stars\n                                            </span>\n                                            <p className=\"\">Rank</p>\n                                        </th>\n                                    </tr>\n                                </thead>\n                                <tbody className=\"bg-white divide-y divide-gray-200\">\n                                    {rankUsers.sort((u1, u2) => (u2.score - u1.score)).map((user, idx) =>\n                                        <LeaderBoardIndividual userInfo={user} key={idx} rank={idx} managerEmail={managerEmail}/>\n                                    )}\n                                </tbody>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n","import React, { useContext, useEffect } from 'react'\nimport EventView from \"./EventViewComponents/EventView\";\nimport MainHeader from \"./MainHeader\";\nimport MainSideNav from \"./MainSideNav\";\nimport GlobalContext from \"../context/GlobalContext\";\nimport EventPool from './EventPoolComponents/EventPool';\nimport LeaderboardView from './LeaderboardComponents/LeaderboardView';\n\nexport default function HomePage() {\n  const { Token, segmentSelected } = useContext(GlobalContext);\n\n  return ( \n    <div>\n      {\n        <React.Fragment>\n          <div className=\"bg-gradient-to-r from-blue-400 via-purple-500 to-pink-500 pt-3 pl-3 pb-3 \">\n            <MainHeader />\n          </div>\n          <div className={`flex bg-${segmentSelected === \"TaskView\" ? \"blue\" : segmentSelected === \"TaskPool\" ? \"purple\" : \"pink\"}-100`}>\n            <MainSideNav />\n            {segmentSelected === \"TaskPool\" ?\n              <div className=\"flex-auto px-12 py-2\" >\n                <EventPool />\n              </div>\n              :\n              segmentSelected === \"TaskView\" ?\n                <div className=\"flex-auto px-12 py-2\" >\n                  <EventView />\n                </div>\n                :\n                <div className=\"flex-auto px-12 py-2\" >\n                  <LeaderboardView />\n                </div>\n            }\n          </div>\n        </React.Fragment>\n      }\n    </div >\n  );\n}","import React, { useContext } from 'react'\nimport Login from \"./components/Login\";\nimport Register from \"./components/Register\";\nimport HomePage from \"./components/HomePage\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\n\n// function getToken() {\n//   let tokenString = sessionStorage.getItem('token');\n//   console.log(\"App get token\");\n//   console.log(tokenString);\n//   if (tokenString === 'undefined') {\n//     console.log(\"enter app\")\n//     return;\n//   }\n//   let userToken = JSON.parse(tokenString);\n//   return userToken?.token;\n// }\n\nfunction App() {\n  return(\n    <Router>\n      <div className=\"App\">\n        <div className=\"content\">\n          <div>\n            {\n                (localStorage.getItem(\"UserEmail\") !== null) ? \n                <Routes>\n                  <Route path=\"/\" element={<HomePage />} />\n                  <Route exact path=\"/login\" element={<Login/>} />\n                  <Route exact path=\"/register\" element={<Register/>} />\n                  <Route exact path=\"/homepage\" element={<HomePage/>} />\n                </Routes> \n              :\n                <Routes>\n                  <Route path=\"/\" element={<Login/>} /> \n                  <Route exact path=\"/login\" element={<Login/>} />\n                  <Route exact path=\"/register\" element={<Register/>} />\n                  <Route exact path=\"/homepage\" element={<HomePage/>} />\n                </Routes>\n            }\n\n          </div>\n        </div>\n      </div>\n    </Router>\n  )\n  // if(Token !== \"NoToken\") {\n  //   return (\n  //     <Router>\n  //       <Login/>\n  //       <Routes>\n  //         <Route path=\"/\" element={<HomePage/>} />\n  //         <Route path=\"/login\" element={<Login/>} />\n  //         <Route path=\"/register\" element={<Register/>} />\n  //         <Navigate from='/*' to='/'/> \n  //       </Routes>\n  //     </Router>\n  //   )\n  // }\n  // return (\n  //   <Router>\n  //     <Routes>\n  //         <Route exact path=\"/\" element={<HomePage/>} />\n  //         <Route path=\"/login\" element={<Login/>}/>\n  //         <Route path=\"/register\" celement={<Register/>} /> \n  //       </Routes>\n  //   </Router>\n  // );\n}\n\nexport default App;\n","import React, {\n  useState,\n  useEffect,\n  useReducer,\n  useMemo,\n} from \"react\";\nimport GlobalContext from \"./GlobalContext\";\nimport dayjs from \"dayjs\";\n\n\nasync function postEvent(payload) {\n\n  const requestOptions = {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json',\n    \"Authorization\": \"Token 78556e40349ed503f2739a7a3c999e38e7223a55\" },\n    body: JSON.stringify({ \n      \"created_by\": 1,\n      \"assigned_by\": 2,\n      \"assigned_to\": 3,\n      \"name\": payload['title'],\n      \"description\": payload['description'],\n      \"score\": payload['score'],\n      \"deadline\": payload['deadline'],\n      \"done_at\": \"2021-12-12 13:13:13\" })\n      // TODO Add Task\n  };\n\n  const response = await fetch('http://localhost:8000/tasks/', requestOptions)\n  console.log(response)\n  \n}\n\nasync function updateEvent(payload) {\n\n  const requestOptions = {\n    method: 'PUT',\n    headers: { 'Content-Type': 'application/json',\n    \"Authorization\": \"Token 78556e40349ed503f2739a7a3c999e38e7223a55\" },\n    body: JSON.stringify({ \n      \"created_by\": 1,\n      \"assigned_by\": 2,\n      \"assigned_to\": 3,\n      \"name\": payload['title'],\n      \"description\": payload['description'],\n      \"score\": payload['score'],\n      \"deadline\": payload['deadline'],\n      \"done_at\": \"2021-12-12 13:13:13\" })\n      // TODO Edit Task\n  };\n\n  const response = await fetch('http://localhost:8000/tasks/' + payload.id.toString(), requestOptions)\n  console.log(response)\n  \n}\n\nasync function deleteEvent(payload) {\n\n  const requestOptions = {\n    method: 'DELETE',\n    headers: { 'Content-Type': 'application/json',\n    \"Authorization\": \"Token 78556e40349ed503f2739a7a3c999e38e7223a55\" },\n  };\n\n  const response = await fetch('http://localhost:8000/tasks/' + payload.id.toString(), requestOptions)\n  console.log(response)\n  // TODO Remove Task when deleted or done\n}\n\nasync function getEvent() {\n  const requestOptions = {\n    method: 'GET',\n    headers: { 'Content-Type': 'application/json',\n    \"Authorization\": \"Token 78556e40349ed503f2739a7a3c999e38e7223a55\" }\n  };\n\n  const response = await fetch('http://localhost:8000/tasks/', requestOptions)\n  console.log(response)\n  //TODO Get all tasks\n  \n}\n\nfunction savedEventsReducer(state, { type, payload }) {\n  switch (type) {\n    case \"push\":\n      postEvent(payload);\n      getEvent();\n      return [...state, payload];\n    case \"update\":\n      updateEvent(payload);\n      return state.map((evt) =>\n        evt.id === payload.id ? payload : evt\n      );\n    case \"delete\":\n      deleteEvent(payload);\n      return state.filter((evt) => evt.id !== payload.id);\n    default:\n      throw new Error();\n  }\n}\n\nfunction initEvents() {\n  const storageEvents = localStorage.getItem(\"savedEvents\");\n  const parsedEvents = storageEvents ? JSON.parse(storageEvents) : [];\n  return parsedEvents;\n}\n\nexport default function ContextWrapper(props) {\n  const [monthIndex, setMonthIndex] = useState(dayjs().month());\n  const [smallCalendarMonth, setSmallCalendarMonth] = useState(null);\n  const [daySelected, setDaySelected] = useState(dayjs());\n  const [showEventModal, setShowEventModal] = useState(false);\n  const [selectedEvent, setSelectedEvent] = useState(null);\n  const [labels, setLabels] = useState([]);\n  const [segmentSelected, setSegmentSelected] = useState(\"\");\n  const [currentGroup, setCurrentGroup] = useState(\"\");\n  const [allGroupsInfo, setAllGroupsInfo] = useState([]);\n  const [allUsers, setAllUsers] = useState([]);\n\n  const [currentUser, setCurrentUser] = useState();\n\n  const [savedEvents, dispatchCalEvent] = useReducer(\n    savedEventsReducer,\n    [],\n    initEvents\n  );\n\n\n  const [groupsRankInfo, setGroupsRankInfo] = useState([]);\n\n  const filteredEvents = useMemo(() => {\n    return savedEvents.filter((evt) =>\n      labels\n        .filter((lbl) => lbl.checked)\n        .map((lbl) => lbl.label)\n        .includes(evt.label)\n    );\n  }, [savedEvents, labels]);\n\n  useEffect(() => {\n    localStorage.setItem(\"savedEvents\", JSON.stringify(savedEvents));\n  }, [savedEvents]);\n\n  useEffect(() => {\n    setLabels((prevLabels) => {\n      return [...new Set(savedEvents.map((evt) => evt.label))].map(\n        (label) => {\n          const currentLabel = prevLabels.find(\n            (lbl) => lbl.label === label\n          );\n          return {\n            label,\n            checked: currentLabel ? currentLabel.checked : true,\n          };\n        }\n      );\n    });\n  }, [savedEvents]);\n\n  useEffect(() => {\n    if (smallCalendarMonth !== null) {\n      setMonthIndex(smallCalendarMonth);\n    }\n  }, [smallCalendarMonth]);\n\n  useEffect(() => {\n    if (!showEventModal) {\n      setSelectedEvent(null);\n    }\n  }, [showEventModal]);\n\n  function updateLabel(label) {\n    setLabels(\n      labels.map((lbl) => (lbl.label === label.label ? label : lbl))\n    );\n  }\n\n  return (\n    <GlobalContext.Provider\n      value={{\n        monthIndex,\n        setMonthIndex,\n        smallCalendarMonth,\n        setSmallCalendarMonth,\n        daySelected,\n        setDaySelected,\n        showEventModal,\n        setShowEventModal,\n        dispatchCalEvent,\n        selectedEvent,\n        setSelectedEvent,\n        savedEvents,\n        setLabels,\n        labels,\n        updateLabel,\n        filteredEvents,\n        segmentSelected, \n        setSegmentSelected,\n        currentGroup,\n        setCurrentGroup,\n        currentUser, \n        setCurrentUser,\n        allGroupsInfo, \n        setAllGroupsInfo,\n        allUsers,\n        setAllUsers,\n\n        groupsRankInfo, \n        setGroupsRankInfo,\n      }}\n    >\n      {props.children}\n    </GlobalContext.Provider>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport ContextWrapper from \"./context/ContextWrapper\";\nReactDOM.render(\n  <React.StrictMode>\n    <ContextWrapper>\n      <App />\n    </ContextWrapper>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n"],"sourceRoot":""}